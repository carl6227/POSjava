/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package posapp;

import static java.lang.Integer.parseInt;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author 2ndyrGroupA
 */
public class TransactionsFrame extends javax.swing.JInternalFrame {

    int orderCounter = 0;

    /**
     * Creates new form TransactionsFrame
     */
    public TransactionsFrame() throws ClassNotFoundException, SQLException {

        initComponents();
        upDateDb();
        id.setVisible(false);
        Status.setVisible(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    public void dispByTalbeNum() {
        DefaultTableModel dm = (DefaultTableModel) transactionList.getModel();
        while (dm.getRowCount() > 0) {
            dm.removeRow(0);
             orderCounter = 0;
        }
        try {
            int tblNumber = praseInt(searchTableNum.getText());
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = java.sql.DriverManager.getConnection("jdbc:mysql://remotemysql.com/i6jPHFJtKc", "i6jPHFJtKc", "WGD2ufVrPr"); //establishes the connection
            PreparedStatement stmt = con.prepareStatement("SELECT * FROM orders "+"WHERE tableno="+tblNumber+"");
            System.out.println("solod");
            ResultSet rs = stmt.executeQuery();
            ResultSetMetaData stData = rs.getMetaData();

            int q = stData.getColumnCount();

            DefaultTableModel RecordTable = (DefaultTableModel) transactionList.getModel();
            RecordTable.setRowCount(0);

            while (rs.next()) {
                Vector columnData = new Vector();
                int i;

                for (i = 1; i <= q; i++) {
                    columnData.add(rs.getString("id"));
                    columnData.add(rs.getString("tableno"));
                    columnData.add(rs.getString("item"));
                    columnData.add(rs.getString("quantity"));
                    columnData.add(rs.getString("price"));
                    columnData.add(rs.getString("subtotal"));
                    columnData.add(rs.getString("status"));

                }
                RecordTable.addRow(columnData);
                orderCounter++;
            }
        } catch (Exception ex) {
            System.out.println(ex);
            JOptionPane.showMessageDialog(null, ex);
        }

    }

    public void upDateDb() throws ClassNotFoundException, SQLException {
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = java.sql.DriverManager.getConnection("jdbc:mysql://remotemysql.com/i6jPHFJtKc", "i6jPHFJtKc", "WGD2ufVrPr"); //establishes the connection
            PreparedStatement stmt = con.prepareStatement("SELECT * FROM orders");
            ResultSet rs = stmt.executeQuery();
            Class.forName("com.mysql.jdbc.Driver");

            ResultSetMetaData stData = rs.getMetaData();

            int q = stData.getColumnCount();

            DefaultTableModel RecordTable = (DefaultTableModel) transactionList.getModel();
            RecordTable.setRowCount(0);

            while (rs.next()) {
                Vector columnData = new Vector();
                int i;

                for (i = 1; i <= q; i++) {
                    columnData.add(rs.getString("id"));
                    columnData.add("0"+rs.getString("tableno"));
                    columnData.add(rs.getString("item"));
                    columnData.add(rs.getString("quantity"));
                    columnData.add(rs.getString("price"));
                    columnData.add(rs.getString("subtotal"));
                    columnData.add(rs.getString("status"));

                }
                RecordTable.addRow(columnData);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        transactionList = new javax.swing.JTable();
        SearchBtn = new javax.swing.JButton();
        searchTableNum = new javax.swing.JTextField();
        tablenum = new javax.swing.JTextField();
        menuname = new javax.swing.JTextField();
        qty = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        AddOrder = new javax.swing.JButton();
        CancelOrder = new javax.swing.JButton();
        ConfirmOrder = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        total = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        payOrder = new javax.swing.JButton();
        price = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        deliverOrder = new javax.swing.JButton();
        id = new javax.swing.JTextField();
        Status = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        TableCount = new javax.swing.JLabel();
        OrderCount = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();

        jLabel1.setText("jLabel1");

        setPreferredSize(new java.awt.Dimension(740, 460));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane1.setForeground(new java.awt.Color(0, 153, 153));

        transactionList.setBackground(new java.awt.Color(0, 153, 153));
        transactionList.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        transactionList.setForeground(new java.awt.Color(255, 255, 255));
        transactionList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "Table Number", "Menu Name", "Price", "Quanity", "Subtotal", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        transactionList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                transactionListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(transactionList);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 60, 490, 240));

        SearchBtn.setBackground(new java.awt.Color(0, 51, 51));
        SearchBtn.setForeground(new java.awt.Color(255, 255, 255));
        SearchBtn.setText("Search");
        SearchBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SearchBtnMouseClicked(evt);
            }
        });
        SearchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchBtnActionPerformed(evt);
            }
        });
        jPanel1.add(SearchBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 10, 90, 40));

        searchTableNum.setText("Search orders by table number...");
        searchTableNum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchTableNumActionPerformed(evt);
            }
        });
        searchTableNum.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                searchTableNumKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchTableNumKeyReleased(evt);
            }
        });
        jPanel1.add(searchTableNum, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 10, 210, 40));
        jPanel1.add(tablenum, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 100, 38));
        jPanel1.add(menuname, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 200, 38));
        jPanel1.add(qty, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, 70, 38));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 153, 153));
        jLabel4.setText("Table number");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 79, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 153, 153));
        jLabel5.setText("Menu name");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 79, -1));

        AddOrder.setBackground(new java.awt.Color(0, 51, 51));
        AddOrder.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        AddOrder.setForeground(new java.awt.Color(255, 255, 255));
        AddOrder.setText("Add Order");
        AddOrder.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AddOrderMouseClicked(evt);
            }
        });
        jPanel1.add(AddOrder, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 230, 200, 38));

        CancelOrder.setBackground(new java.awt.Color(0, 51, 51));
        CancelOrder.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        CancelOrder.setForeground(new java.awt.Color(255, 255, 255));
        CancelOrder.setText("Cancel Order");
        CancelOrder.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CancelOrderMouseClicked(evt);
            }
        });
        jPanel1.add(CancelOrder, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 280, 200, 38));

        ConfirmOrder.setBackground(new java.awt.Color(0, 51, 51));
        ConfirmOrder.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ConfirmOrder.setForeground(new java.awt.Color(255, 255, 255));
        ConfirmOrder.setText("Confirm Order");
        ConfirmOrder.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ConfirmOrderMouseClicked(evt);
            }
        });
        jPanel1.add(ConfirmOrder, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 330, 200, 38));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 153, 153));
        jLabel3.setText("Total Bill");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("Php");

        payOrder.setBackground(new java.awt.Color(0, 51, 51));
        payOrder.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        payOrder.setForeground(new java.awt.Color(255, 255, 255));
        payOrder.setText("Settle Payment");
        payOrder.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                payOrderMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(141, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(payOrder, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(total))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3)))
                .addGap(18, 18, 18)
                .addComponent(payOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 300, 230, 120));
        jPanel1.add(price, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 170, 80, 38));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 153, 153));
        jLabel8.setText("Price");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 150, 79, -1));

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel9.setText("Php");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 180, 41, -1));

        deliverOrder.setBackground(new java.awt.Color(0, 51, 51));
        deliverOrder.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        deliverOrder.setForeground(new java.awt.Color(255, 255, 255));
        deliverOrder.setText("Deliver Order");
        deliverOrder.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deliverOrderMouseClicked(evt);
            }
        });
        jPanel1.add(deliverOrder, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 380, 200, 38));
        jPanel1.add(id, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 420, 80, 38));
        jPanel1.add(Status, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 420, 80, 38));

        jPanel3.setBackground(new java.awt.Color(0, 102, 102));

        jPanel4.setBackground(new java.awt.Color(0, 153, 153));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 26, Short.MAX_VALUE)
        );

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Table Number: ");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Total Order: ");

        TableCount.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        TableCount.setForeground(new java.awt.Color(255, 255, 255));
        TableCount.setText("0");

        OrderCount.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        OrderCount.setForeground(new java.awt.Color(255, 255, 255));
        OrderCount.setText("0");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TableCount))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(OrderCount, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(TableCount))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(OrderCount)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 320, 190, 100));

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 153, 153));
        jLabel11.setText("Quantity");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, 79, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -10, 730, 470));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void transactionListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_transactionListMouseClicked

        DefaultTableModel RecordTable = (DefaultTableModel) transactionList.getModel();
        int SelectedRows = transactionList.getSelectedRow();

        id.setText(RecordTable.getValueAt(SelectedRows, 0).toString());
        tablenum.setText(RecordTable.getValueAt(SelectedRows, 1).toString());
        menuname.setText(RecordTable.getValueAt(SelectedRows, 2).toString());
        qty.setText(RecordTable.getValueAt(SelectedRows, 3).toString());
        price.setText(RecordTable.getValueAt(SelectedRows, 4).toString());
        Status.setText(RecordTable.getValueAt(SelectedRows, 5).toString());

    }//GEN-LAST:event_transactionListMouseClicked

    private void SearchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchBtnActionPerformed

    }//GEN-LAST:event_SearchBtnActionPerformed

    private void payOrderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_payOrderMouseClicked

//        String Category = category.getText();
//        String menuname = menuName.getText();
//        int Price = parseInt(price.getText());
//        try {
//            Class.forName("com.mysql.jdbc.Driver");
//            Connection con = java.sql.DriverManager.getConnection("jdbc:mysql://remotemysql.com/i6jPHFJtKc", "i6jPHFJtKc", "WGD2ufVrPr"); //establishes the connection
//            PreparedStatement stmt = con.prepareStatement("INSERT INTO menu(category,menuname,price) values(?,?,?)");
//            stmt.setString(1, Category);
//            stmt.setString(2, menuname);
//            stmt.setInt(3, Price);
//            //
//
//            stmt.executeUpdate();
//            upDateDb();
//            JOptionPane.showMessageDialog(this, "Record Added");
//
//        } catch (ClassNotFoundException ex) {
//            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
//        } catch (SQLException ex) {
//            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
//        }
    }//GEN-LAST:event_payOrderMouseClicked

    private void AddOrderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddOrderMouseClicked
        int table_num = parseInt(tablenum.getText());
        String menuName = menuname.getText();
        int Price = parseInt(price.getText());
        int quantity = parseInt(qty.getText());
        int subtotal = Price * quantity;
        String Status = "Pending";
        if (table_num != 0 || menuName != "" || Price != 0 || quantity != 0) {

            try {
                Class.forName("com.mysql.jdbc.Driver");
                Connection con = java.sql.DriverManager.getConnection("jdbc:mysql://remotemysql.com/i6jPHFJtKc", "i6jPHFJtKc", "WGD2ufVrPr"); //establishes the connection
                PreparedStatement stmt = con.prepareStatement("INSERT INTO orders(tableno,item,quantity,price,subtotal,status) values(?,?,?,?,?,?)");
                stmt.setInt(1, table_num);
                stmt.setString(2, menuName);
                stmt.setInt(3, quantity);
                stmt.setInt(4, Price);
                stmt.setInt(5, subtotal);
                stmt.setString(6, Status);

                stmt.executeUpdate();
                upDateDb();
                JOptionPane.showMessageDialog(this, "Order Added");

            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(this, "All field must not be empty");
        }

    }//GEN-LAST:event_AddOrderMouseClicked

    private void CancelOrderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CancelOrderMouseClicked
        int ID = parseInt(id.getText());
        if (ID != 0) {

            try {
                Class.forName("com.mysql.jdbc.Driver");
                Connection con = java.sql.DriverManager.getConnection("jdbc:mysql://remotemysql.com/i6jPHFJtKc", "i6jPHFJtKc", "WGD2ufVrPr"); //establishes the connection
                PreparedStatement stmt = con.prepareStatement("DELETE FROM orders where id=?");
                stmt.setInt(1, ID);

//     
                stmt.executeUpdate();
                upDateDb();
                JOptionPane.showMessageDialog(this, "Order deleted Successfully");

            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(this, "You must select an Order");

        }
    }//GEN-LAST:event_CancelOrderMouseClicked

    private void ConfirmOrderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ConfirmOrderMouseClicked

        int ID = parseInt(id.getText());
        if (ID != 0) {
            try {
                Class.forName("com.mysql.jdbc.Driver");
                Connection con = java.sql.DriverManager.getConnection("jdbc:mysql://remotemysql.com/i6jPHFJtKc", "i6jPHFJtKc", "WGD2ufVrPr"); //establishes the connection
                PreparedStatement stmt = con.prepareStatement("UPDATE orders SET status=? where id=?");
                stmt.setString(1, "confirmed");
                stmt.setInt(2, ID);
//     

                stmt.executeUpdate();
                upDateDb();
                JOptionPane.showMessageDialog(this, "Order Confirmed");

            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(this, "You must select an Order");

        }
    }//GEN-LAST:event_ConfirmOrderMouseClicked

    private void searchTableNumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchTableNumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchTableNumActionPerformed

    private void deliverOrderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deliverOrderMouseClicked
        int ID = parseInt(id.getText());
        if (ID == 0) {

            if (Status.getText() != "pending") {

                try {
                    Class.forName("com.mysql.jdbc.Driver");
                    Connection con = java.sql.DriverManager.getConnection("jdbc:mysql://remotemysql.com/i6jPHFJtKc", "i6jPHFJtKc", "WGD2ufVrPr"); //establishes the connection
                    PreparedStatement stmt = con.prepareStatement("UPDATE orders SET status=? where id=?");
                    stmt.setString(1, "Delivered");
                    stmt.setInt(2, ID);
//     

                    stmt.executeUpdate();
                    upDateDb();
                    JOptionPane.showMessageDialog(this, "Order Delivered");

                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Order still Pending!");
            }
        } else {
            JOptionPane.showMessageDialog(this, "You must select an Order");
        }
    }//GEN-LAST:event_deliverOrderMouseClicked

    private void SearchBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SearchBtnMouseClicked
         DefaultTableModel model = (DefaultTableModel)transactionList.getModel();
               TableRowSorter<DefaultTableModel>tr=new TableRowSorter<DefaultTableModel>(model);
               transactionList.setRowSorter(tr);
               tr.setRowFilter(RowFilter.regexFilter(searchTableNum.getText().trim()));
        String CountStr = Integer.toString(orderCounter);
        TableCount.setText(searchTableNum.getText());
        OrderCount.setText(CountStr);
    }//GEN-LAST:event_SearchBtnMouseClicked

    private void searchTableNumKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchTableNumKeyPressed
            
    }//GEN-LAST:event_searchTableNumKeyPressed

    private void searchTableNumKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchTableNumKeyReleased
   
    }//GEN-LAST:event_searchTableNumKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddOrder;
    private javax.swing.JButton CancelOrder;
    private javax.swing.JButton ConfirmOrder;
    private javax.swing.JLabel OrderCount;
    private javax.swing.JButton SearchBtn;
    private javax.swing.JTextField Status;
    private javax.swing.JLabel TableCount;
    private javax.swing.JButton deliverOrder;
    private javax.swing.JTextField id;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField menuname;
    private javax.swing.JButton payOrder;
    private javax.swing.JTextField price;
    private javax.swing.JTextField qty;
    private javax.swing.JTextField searchTableNum;
    private javax.swing.JTextField tablenum;
    private javax.swing.JTextField total;
    private javax.swing.JTable transactionList;
    // End of variables declaration//GEN-END:variables

    private int praseInt(String text) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
